{"version":3,"file":"index.js","sourceRoot":"/","sources":["src/index.ts"],"names":[],"mappings":"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","sourcesContent":["require('react');\nrequire('graphql');\nrequire('lodash');\nrequire('subscriptions-transport-ws');\n\nconst { generateApolloClient } = require(\"@deep-foundation/hasura/client\");\nconst { DeepClient } = require('@deep-foundation/deeplinks/imports/client');\nconst { minilinks, Link } = require('@deep-foundation/deeplinks/imports/minilinks');\n\nconst apolloClient = generateApolloClient({\n  path: process.env.NEXT_PUBLIC_GQL_PATH || '', // <<= HERE PATH TO UPDATE\n  ssl: !!~process.env.NEXT_PUBLIC_GQL_PATH.indexOf('localhost') ? false : true,\n  // admin token in prealpha deep secret key\n  // token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsibGluayJdLCJ4LWhhc3VyYS1kZWZhdWx0LXJvbGUiOiJsaW5rIiwieC1oYXN1cmEtdXNlci1pZCI6IjI2MiJ9LCJpYXQiOjE2NTYxMzYyMTl9.dmyWwtQu9GLdS7ClSLxcXgQiKxmaG-JPDjQVxRXOpxs',\n});\n\nconst unloginedDeep = new DeepClient({ apolloClient });\n\nconst delay = (time = 1000) => new Promise(res => setTimeout(res, time));\n\nconst f = async () => {\n  const guest = await unloginedDeep.guest();\n  const guestDeep = new DeepClient({ deep: unloginedDeep, ...guest });\n  const admin = await guestDeep.login({ linkId: await guestDeep.id('deep', 'admin') });\n  const deep = new DeepClient({ deep: guestDeep, ...admin });\n\n  const User = await deep.id('@deep-foundation/core', 'User');\n  const Type = await deep.id('@deep-foundation/core', 'Type');\n  const Any = await deep.id('@deep-foundation/core', 'Any');\n  const Join = await deep.id('@deep-foundation/core', 'Join');\n  const Contain = await deep.id('@deep-foundation/core', 'Contain');\n  const Value = await deep.id('@deep-foundation/core', 'Value');\n  const String = await deep.id('@deep-foundation/core', 'String');\n  const Package = await deep.id('@deep-foundation/core', 'Package');\n\n  const SyncTextFile = await deep.id('@deep-foundation/core', 'SyncTextFile');\n  const dockerSupportsJs = await deep.id('@deep-foundation/core', 'dockerSupportsJs');\n  const Handler = await deep.id('@deep-foundation/core', 'Handler');\n  const HandleInsert = await deep.id('@deep-foundation/core', 'HandleInsert');\n  const HandleDelete = await deep.id('@deep-foundation/core', 'HandleDelete');\n\n  const Tree = await deep.id('@deep-foundation/core', 'Tree');\n  const TreeIncludeNode = await deep.id('@deep-foundation/core', 'TreeIncludeNode');\n  const TreeIncludeUp = await deep.id('@deep-foundation/core', 'TreeIncludeUp');\n  const TreeIncludeFromCurrent = await deep.id('@deep-foundation/core', 'TreeIncludeFromCurrent');\n\n  const Rule = await deep.id('@deep-foundation/core', 'Rule');\n  const RuleSubject = await deep.id('@deep-foundation/core', 'RuleSubject');\n  const RuleObject = await deep.id('@deep-foundation/core', 'RuleObject');\n  const RuleAction = await deep.id('@deep-foundation/core', 'RuleAction');\n  const Selector = await deep.id('@deep-foundation/core', 'Selector');\n  const SelectorInclude = await deep.id('@deep-foundation/core', 'SelectorInclude');\n  const SelectorExclude = await deep.id('@deep-foundation/core', 'SelectorExclude');\n  const SelectorTree = await deep.id('@deep-foundation/core', 'SelectorTree');\n  const containTree = await deep.id('@deep-foundation/core', 'containTree');\n  const AllowInsertType = await deep.id('@deep-foundation/core', 'AllowInsertType');\n  const AllowDeleteType = await deep.id('@deep-foundation/core', 'AllowDeleteType');\n  const SelectorFilter = await deep.id('@deep-foundation/core', 'SelectorFilter');\n  const Query = await deep.id('@deep-foundation/core', 'Query');\n  const usersId = await deep.id('deep', 'users');\n\n  const { data: [{ id: packageId }] } = await deep.insert({\n    type_id: Package,\n    string: { data: { value: `@deep-foundation/profitmaker` } },\n    in: { data: [\n      {\n        type_id: Contain,\n        from_id: deep.linkId\n      },\n    ] },\n    out: { data: [\n      {\n        type_id: Join,\n        to_id: await deep.id('deep', 'users', 'packages'),\n      },\n      {\n        type_id: Join,\n        to_id: await deep.id('deep', 'admin'),\n      },\n    ] },\n  });\n  console.log({ packageId });\n\n  // INVEST PROVIDER\n  const { data: [{ id: BrokerProvider }] } = await deep.insert({\n    type_id: Type,\n    from_id: Any,\n    to_id: Any,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'BrokerProvider' } },\n    } },\n  });\n  console.log({ BrokerProvider });\n\n  // ASSET\n  const { data: [{ id: Asset }] } = await deep.insert({\n    type_id: Type,\n    from_id: Any,\n    to_id: Any,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Asset' } },\n    } },\n  });\n  console.log({ Asset });\n\n  const { data: [{ id: Isin }] } = await deep.insert({\n    type_id: Type,\n    from_id: BrokerProvider,\n    to_id: Asset,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Isin' } },\n    } },\n  });\n  console.log({ Isin });\n\n  const { data: [{ id: AssetTicker }] } = await deep.insert({\n    type_id: Type,\n    from_id: BrokerProvider,\n    to_id: Asset,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'AssetTicker' } },\n    } },\n  });\n  console.log({ AssetTicker });\n\n  const { data: [{ id: AssetData }] } = await deep.insert({\n    type_id: Type,\n    from_id: BrokerProvider,\n    to_id: Asset,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'AssetData' } },\n    } },\n  });\n  console.log({ AssetData });\n\n  // INSTRUMENT\n  const { data: [{ id: Instrument }] } = await deep.insert({\n    type_id: Type,\n    from_id: Any,\n    to_id: Any,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Instrument' } },\n    } },\n  });\n  console.log({ Instrument });\n\n  const { data: [{ id: Figi }] } = await deep.insert({\n    type_id: Type,\n    from_id: BrokerProvider,\n    to_id: Instrument,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Figi' } },\n    } },\n  });\n  console.log({ Figi });\n\n  const { data: [{ id: InstrumentTicker }] } = await deep.insert({\n    type_id: Type,\n    from_id: BrokerProvider,\n    to_id: Asset,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'InstrumentTicker' } },\n    } },\n  });\n  console.log({ InstrumentTicker });\n\n  const { data: [{ id: InstrumentData }] } = await deep.insert({\n    type_id: Type,\n    from_id: BrokerProvider,\n    to_id: Instrument,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'InstrumentData' } },\n    } },\n  });\n  console.log({ InstrumentData });\n\n  // WALLET\n  const { data: [{ id: Wallet }] } = await deep.insert({\n    type_id: Type,\n    from_id: User,\n    to_id: BrokerProvider,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Wallet' } },\n    } },\n  });\n  console.log({ Wallet });\n\n  // TRANSACTION\n  const { data: [{ id: Transaction }] } = await deep.insert({\n    type_id: Type,\n    from_id: Wallet,\n    to_id: Wallet,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Transaction' } },\n    } },\n  });\n  console.log({ Transaction });\n\n  const { data: [{ id: Base }] } = await deep.insert({\n    type_id: Type,\n    from_id: Any, // Transaction\n    to_id: Any, // Asset\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Base' } },\n    } },\n  });\n  console.log({ Base });\n\n  const { data: [{ id: Quote }] } = await deep.insert({\n    type_id: Type,\n    from_id: Any, // Transaction\n    to_id: Any, // Asset\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Quote' } },\n    } },\n  });\n  console.log({ Quote });\n\n  // TRANSACTION: PRICE, AMOUNT, TOTAL\n  const { data: [{ id: Price }] } = await deep.insert({\n    type_id: Type,\n    from_id: Transaction,\n    to_id: Instrument,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Price' } },\n    } },\n  });\n  console.log({ Price });\n\n  const { data: [{ id: Amount }] } = await deep.insert({\n    type_id: Type,\n    from_id: Transaction,\n    to_id: Instrument,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Amount' } },\n    } },\n  });\n  console.log({ Amount });\n\n  const { data: [{ id: Total }] } = await deep.insert({\n    type_id: Type,\n    from_id: Amount,\n    to_id: Price,\n    in: { data: {\n      type_id: Contain,\n      from_id: packageId,\n      string: { data: { value: 'Total' } },\n    } },\n  });\n  console.log({ Total });\n\n};\nf();"]}